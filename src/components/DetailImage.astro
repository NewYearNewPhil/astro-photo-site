---
import { Image } from "astro:assets";

const { image, prevImage, nextImage } = Astro.props as any;
---

<div
    transition:animate="fade"
    class="w-screen h-screen flex justify-center items-center"
>
    <Image
        class="max-w-screen max-h-screen w-auto h-auto absolute"
        widths={[120, 240, 360, 720, 1024, 1920]}
        sizes="(max-width: 120px) 120px, (max-width: 240px) 240px, (max-width: 360px) 360px, (max-width: 720px) 720px, (max-width: 1024px) 1024px, (max-width: 1920px) 1920px"
        src={image.data.src}
        alt=""
    />
    <div class="fixed bottom-4 flex justify-center w-full">
        <div transition:animate="none" class="join bg-base-200">
            {
                prevImage && (
                    <a
                        id="prevImage"
                        href={`../${prevImage.slug}/`}
                        data-astro-history="replace"
                        class="join-item"
                    >
                        <button class="btn">«</button>
                    </a>
                )
            }
            {
                nextImage && (
                    <a
                        id="nextImage"
                        href={`../${nextImage.slug}/`}
                        data-astro-history="replace"
                        class="join-item"
                    >
                        <button class="btn">»</button>
                    </a>
                )
            }
        </div>
    </div>
</div>
<script>
    import { navigate } from "astro:transitions/client";
    // changed from https://stackoverflow.com/a/23230280

    document.addEventListener("touchstart", handleTouchStart, false);
    document.addEventListener("touchmove", handleTouchMove, false);

    let xDown: number | undefined = undefined;
    let yDown: number | undefined = undefined;

    function handleTouchStart(evt: TouchEvent) {
        const firstTouch = evt.touches[0];
        xDown = firstTouch.clientX;
        yDown = firstTouch.clientY;
    }

    function handleTouchMove(evt: TouchEvent) {
        if (!xDown || !yDown) {
            return;
        }

        var xUp = evt.touches[0].clientX;
        var yUp = evt.touches[0].clientY;

        var xDiff = xDown - xUp;
        var yDiff = yDown - yUp;

        if (Math.abs(xDiff) > Math.abs(yDiff)) {
            if (xDiff > 0) {
                /* right swipe */
                const nextImage = document.querySelector(
                    "#nextImage",
                ) as HTMLAnchorElement | null;
                if (nextImage) {
                    navigate(nextImage.href, { history: "replace" });
                }
            } else {
                /* left swipe */
                const prevImage = document.querySelector(
                    "#prevImage",
                ) as HTMLAnchorElement | null;
                if (prevImage) {
                    navigate(prevImage.href, { history: "replace" });
                }
            }
        }

        xDown = undefined;
        yDown = undefined;
    }
</script>
