---
import { Image } from "astro:assets";
import leftIcon from "../assets/caret-left.svg";
import rightIcon from "../assets/caret-right.svg";

const { image, prevImage, nextImage } = Astro.props as any;

const breakpoints = [2880, 2560, 1920, 1600, 1440, 1024, 768, 640, 480, 240];
let widths = breakpoints.filter((bp) => bp <= image.data.src.width);
---

<div
    transition:animate="fade"
    class="w-screen h-[calc(100dvh)] flex justify-center items-center"
>
    <Image
        class="max-w-screen max-h-screen w-auto h-auto absolute"
        widths={widths}
        sizes="100vw"
        src={image.data.src}
        alt=""
        loading="eager"
    />

    <div class="fixed top-4 left-4 idle-hidden">
        <a
            href="javascript:history.back()"
            class="shadow-lg"
            aria-label="return to gallery"
        >
            <button class="btn" aria-label="return to gallery">
                <Image src={leftIcon} alt="<" class="h-6 w-6 md:h-8 md:w-8" />
            </button>
        </a>
    </div>
    <div class="fixed bottom-4 flex justify-center w-full">
        <div
            transition:animate="none"
            class={`${prevImage && nextImage ? "join" : ""} rounded-lg bg-base-200 shadow-lg idle-hidden transition-opacity duration-200`}
        >
            {
                prevImage && (
                    <button
                        class={`${prevImage && nextImage ? "join-item" : "rounded-lg"} btn`}
                        aria-label="<"
                        role="link"
                        data-href={`../${prevImage.slug}/`}
                        data-prev-button
                        data-replace
                    >
                        <Image
                            src={leftIcon}
                            alt="<"
                            class="h-6 w-6 md:h-8 md:w-8"
                        />
                    </button>
                )
            }
            {
                nextImage && (
                    <button
                        class={`${prevImage && nextImage ? "join-item" : "rounded-lg"} btn`}
                        aria-label=">"
                        role="link"
                        data-href={`../${nextImage.slug}/`}
                        data-next-button
                        data-replace
                    >
                        <Image
                            src={rightIcon}
                            alt=">"
                            class="h-6 w-6 md:h-8 md:w-8"
                        />
                    </button>
                )
            }
        </div>
    </div>
</div>
<script>
    // changed from https://stackoverflow.com/a/23230280

    document.addEventListener("touchstart", handleTouchStart, false);
    document.addEventListener("touchmove", handleTouchMove, false);

    let xDown: number | undefined = undefined;
    let yDown: number | undefined = undefined;

    function handleTouchStart(evt: TouchEvent) {
        const firstTouch = evt.touches[0];
        xDown = firstTouch.clientX;
        yDown = firstTouch.clientY;
    }

    function handleTouchMove(evt: TouchEvent) {
        if (!xDown || !yDown) {
            return;
        }

        var xUp = evt.touches[0].clientX;
        var yUp = evt.touches[0].clientY;

        var xDiff = xDown - xUp;
        var yDiff = yDown - yUp;

        if (Math.abs(xDiff) > Math.abs(yDiff)) {
            if (xDiff > 0) {
                /* right swipe */
                const nextImage = document.querySelector(
                    "[data-next-button]",
                ) as HTMLButtonElement | null;

                const nextImageLink = nextImage?.getAttribute("data-href");

                if (nextImageLink) {
                    location.replace(nextImageLink);
                }
            } else {
                /* left swipe */
                const prevImage = document.querySelector(
                    "[data-prev-button]",
                ) as HTMLButtonElement | null;

                const prevImageLink = prevImage?.getAttribute("data-href");

                if (prevImageLink) {
                    location.replace(prevImageLink);
                }
            }
        }

        xDown = undefined;
        yDown = undefined;
    }
</script>
<script>
    const buttons = document.querySelectorAll("[data-replace]");
    buttons.forEach((button) => {
        const href = button?.getAttribute("data-href");
        if (href) {
            button.addEventListener("click", () => location.replace(href));
        }
    });
</script>
<script>
    import init from "./IdleHidden";
    init();
</script>
